{"version":3,"sources":["Card.js","CardList.js","SearchBar.js","robo.js","App.js","serviceWorker.js","index.js"],"names":["Card","robot","id","src","name","alt","email","CardList","i","robots","length","push","SearchBar","onclick","console","log","placeholder","type","onChange","username","App","event","setState","searchfield","target","value","state","this","filteredRobots","filter","toLowerCase","includes","align","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4a5b71e7.chunk.js","sourcesContent":["import React from 'react';\r\nimport'./Card.css';\r\n const Card=({robot})=>{\r\n return(\r\n    <div id=\"card\">\r\n        <img src={`https://robohash.org/${robot.name}`} alt=\"robots\"/>\r\n        <h1>{robot.name}</h1>\r\n        <p>{robot.email}</p>\r\n    </div>\r\n );\r\n }\r\n export default Card;","import React from 'react';\r\nimport Card from'./Card'\r\n\r\n\r\nconst CardList=( {robots})=>{\r\nvar CardList=[],i;\r\nfor(i=0;i<robots.length;i++){\r\nCardList.push(<Card robot={robots[i]}/>)    \r\n}\r\nreturn(CardList);\r\n} \r\n\r\n\r\nexport default CardList;","import React from 'react';\r\nimport './SeachBar.css'\r\nconst SearchBar=({onclick})=>{\r\nreturn(\r\n    <div>\r\n    {console.log()}\r\n    <input placeholder=\"input robo name\" type=\"seach\" onChange={onclick}/>\r\n</div>\r\n);\r\n} \r\nexport default SearchBar;","export const robots = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz'\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv'\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net'\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org'\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca'\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info'\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz'\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsd',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me'\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io'\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz'\n  },\n  {\n    id: 1,\n    name: 'dadi ama',\n    username: 'Bret',\n    email: 'Sincere@april.biz'\n  },\n  {\n    id: 2,\n    name: 'shreyansh',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv'\n  },\n  {\n    id: 3,\n    name: 'sibbu',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net'\n  },\n  {\n    id: 4,\n    name: 'avendra',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org'\n  },\n  {\n    id: 5,\n    name: 'bittu',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca'\n  },\n  {\n    id: 6,\n    name: 'mother',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info'\n  },\n  {\n    id: 7,\n    name: 'bibha singh',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz'\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsd',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me'\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io'\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz'\n  },{\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz'\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv'\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net'\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org'\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca'\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info'\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz'\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsd',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me'\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io'\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz'\n  },{\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz'\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv'\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net'\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org'\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca'\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info'\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz'\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsd',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me'\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io'\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz'\n  }, {\n    id: 11,\n    name: 'Divyanshi',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz'\n  }\n];\n","import React,{Component} from 'react';\r\nimport CardList from './CardList'\r\nimport SearchBar from './SearchBar'\r\nimport {robots} from './robo'\r\nimport './App.css'\r\nclass App extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            searchfield:\"\",\r\n            robots:robots\r\n\r\n        }\r\n    }\r\n    onclick=(event)=>{\r\n        \r\n    this.setState({ searchfield: event.target.value })\r\n\r\n\r\n    }\r\n    render(){\r\n        \r\n    const { robots, searchfield } = this.state;\r\n    const filteredRobots = robots.filter(robot =>{\r\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n    })\r\n\r\n        return (\r\n        <div>\r\n            <header>\r\n                <h1 align=\"center\">RoboFriends</h1>\r\n            </header>\r\n            <footer align=\"center\">\r\n            <SearchBar onclick={this.onclick}/>\r\n                <CardList robots={filteredRobots}/>\r\n            </footer>\r\n        </div>\r\n        );\r\n    \r\n}\r\n}\r\nexport default App;\r\n\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <div>\n    <App/>\n  </div>,document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}